# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: self
    type: git
    ref: main

#trigger:
#- main

pool:
  name: Self-hosted Tosca

stages:
- stage: build
  jobs:
    - job: build_test
      displayName: Job1::Build

- stage: test
  dependsOn: build
  jobs:
    - job: reun_tests
      displayName: Job2::Test
      steps:
      - task: PowerShell@2
        displayName: Create results folder
        inputs:
          targetType: 'inline'
          script: |
            if (!(Test-Path './results')) {New-Item './results' -ItemType Directory}
            Write-Host "Pipeline.Workspace: " $(Pipeline.Workspace)
            Write-Host "Build.SourcesDirectory: " $(Build.SourcesDirectory)
            Write-Host "Build.ArtifactStagingDirectory:" $(Build.ArtifactStagingDirectory)
            Write-Host "system.JobId: "$(system.JobId)

      - task: PowerShell@2
        displayName: 'run_build > Steps > Task 1...'
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            echo (Get-Date -Format "MM/dd/yyyy - HH:mm:ss-ffff") >> './results/hello world.txt'
            $param3 = "number 3"
            Write-Host $(param1)
            Write-Host $(param2)
            Write-Host $param3

      - task: PowerShell@2
        displayName: 'run_build > Steps > Task 2...'
        inputs:
          targetType: 'inline'
          script: cat './results/hello world.txt'

      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'arti'
          publishLocation: 'pipeline'
