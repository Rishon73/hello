# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: self
    type: git
    ref: main

#trigger:
#- main

pool:
  name: Self-hosted Tosca

stages:
- stage: test
  jobs:
    - job: reun_tests
      steps:
#      - task: PowerShell@2
#        displayName: Create results folder
#        inputs:
#          targetType: 'inline'
#          script: |
#            if (!(Test-Path './results')) {New-Item './results' -ItemType Directory}
#            Write-Host "Pipeline.Workspace: " $(Pipeline.Workspace)
#            Write-Host "Build.SourcesDirectory: " $(Build.SourcesDirectory)
#            Write-Host "Build.ArtifactStagingDirectory:" $(Build.ArtifactStagingDirectory)
#            Write-Host "system.JobId: "$(system.JobId)

      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'arti'
          publishLocation: 'pipeline'

      - task: PowerShell@2
        displayName: 'run_build > Steps > Task 1...'
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            if (!(Test-Path "./results")) {New-Item "./results" -ItemType Directory}

            echo (Get-Date -Format "MM/dd/yyyy - HH:mm:ss-ffff") >> './hello world.txt'
            Copy-Item "$(Build.SourcesDirectory)/xxx_results.xlm" "$(Build.SourcesDirectory)/results/xxx_results.xml"
            Copy-Item "$(Build.SourcesDirectory)/hello world.txt" "$(Build.SourcesDirectory)/results/hello world.txt"

      - task: PowerShell@2
        displayName: 'cat...'
        inputs:
          targetType: 'inline'
          script: cat "$(Build.SourcesDirectory)/results/hello world.txt"

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/*_results.xml'
