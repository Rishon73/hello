# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: self
    type: git
    ref: main

#trigger:
#- main


pool: 
   name: $(poolName)
   demands:
   - agent.name -equals $(agentName)
   #- Agent.Version -equals 3.242.1

stages:
- stage: test
  jobs:
    - job: reun_tests
      steps:
      - task: PowerShell@2
        displayName: Create results folder
        inputs:
          targetType: 'inline'
          script: |
            #if (!(Test-Path './results2')) {New-Item './results2' -ItemType Directory}
            Write-Host "Pipeline.Workspace: " $(Pipeline.Workspace)
            Write-Host "Build.SourcesDirectory: " $(Build.SourcesDirectory)
            Write-Host "Build.ArtifactStagingDirectory: " $(Build.ArtifactStagingDirectory)
            Write-Host "System.DefaultWorkingDirectory: " $(System.DefaultWorkingDirectory)
            Write-Host "system.JobId: " $(system.JobId)


      - task: PowerShell@2
        displayName: 'run_build > Steps > Task 1...'
        inputs:
          targetType: 'inline'
          script: |
            echo (Get-Date -Format "MM/dd/yyyy - HH:mm:ss-ffff") >> './hello world.txt'
            Copy-Item "$(Build.SourcesDirectory)/xxx_results.xlm" '$(Pipeline.Workspace)/TestResults/xxx_results.xml'
            Copy-Item "$(Build.SourcesDirectory)/hello world.txt" '$(Pipeline.Workspace)/TestResults/hello world.txt'

      - task: PowerShell@2
        displayName: 'cat...'
        inputs:
          targetType: 'inline'
          script: |
            cat "$(Pipeline.Workspace)/TestResults/hello world.txt"
            cat "$(Pipeline.Workspace)/TestResults/xxx_results.xml"

      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: 'arti'
          publishLocation: 'pipeline'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: "$(Pipeline.Workspace)/TestResults/*_results.xml"
